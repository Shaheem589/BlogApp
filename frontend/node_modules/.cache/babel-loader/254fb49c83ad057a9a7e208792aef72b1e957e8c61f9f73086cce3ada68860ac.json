{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year project\\\\WebP\\\\final\\\\client\\\\src\\\\components\\\\details\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextareaAutosize, styled } from \"@mui/material\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { DataContext } from \"../../../context/DataProvider\";\nimport { API } from \"../../../service/api\";\nimport Comment from \"./Comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)`\n    margin-top: 100px;\n    display: flex;\n`;\n_c = Container;\nconst Image = styled('img')({\n  width: 50,\n  height: 50,\n  borderRadius: '50%'\n});\n_c2 = Image;\nconst StyledTextArea = styled(TextareaAutosize)`\n    height: 100px !important;\n    width: 100%; \n    margin: 0 20px;\n`;\n_c3 = StyledTextArea;\nconst initialValue = {\n  name: '',\n  postId: '',\n  date: new Date(),\n  comments: ''\n};\nexport const Comments = ({\n  post\n}) => {\n  _s();\n  const url = 'https://static.thenounproject.com/png/12017-200.png';\n  const {\n    account\n  } = useContext(DataContext);\n  const [comment, setComment] = useState(initialValue);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      let response = await API.getAllComments(post._id);\n      if (response.isSuccess) {\n        setComments(response.data);\n      }\n    };\n    getData();\n  }, [post]);\n  const handleChange = e => {\n    setComment({\n      ...comment,\n      name: account.username,\n      postId: post._id,\n      comments: e.target.value\n    });\n  };\n  const addComment = async e => {\n    let response = await API.newComment(comment);\n    if (response.isSuccess) {\n      setComment(initialValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: url,\n        alt: \"DP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n        minRows: 5,\n        placeholder: \"Share your thoughts...\",\n        value: comment.comments,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        style: {\n          height: 40\n        },\n        onClick: e => addComment(e),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"H1F3rjeFCreJuuUih1up+rkgP9k=\");\n_c4 = Comments;\nexport default Comments;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"StyledTextArea\");\n$RefreshReg$(_c4, \"Comments\");","map":{"version":3,"names":["Box","Button","TextareaAutosize","styled","useState","useContext","useEffect","DataContext","API","Comment","jsxDEV","_jsxDEV","Container","_c","Image","width","height","borderRadius","_c2","StyledTextArea","_c3","initialValue","name","postId","date","Date","comments","Comments","post","_s","url","account","comment","setComment","setComments","getData","response","getAllComments","_id","isSuccess","data","handleChange","e","username","target","value","addComment","newComment","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","minRows","placeholder","onChange","variant","size","style","onClick","_c4","$RefreshReg$"],"sources":["E:/Final year project/WebP/final/client/src/components/details/comments/Comments.jsx"],"sourcesContent":["import { Box,Button,TextareaAutosize,styled } from \"@mui/material\";\r\nimport { useState,useContext,useEffect } from \"react\";\r\nimport { DataContext } from \"../../../context/DataProvider\";\r\nimport { API } from \"../../../service/api\";\r\nimport Comment from \"./Comment\";\r\nconst Container = styled(Box)`\r\n    margin-top: 100px;\r\n    display: flex;\r\n`;\r\n\r\nconst Image = styled('img')({\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: '50%'\r\n});\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n    height: 100px !important;\r\n    width: 100%; \r\n    margin: 0 20px;\r\n`;\r\n\r\nconst initialValue = {\r\n    name: '',\r\n    postId: '',\r\n    date: new Date(),\r\n    comments: ''\r\n}\r\nexport const Comments=({post})=>{\r\n    const url = 'https://static.thenounproject.com/png/12017-200.png';\r\n    const {account}=useContext(DataContext);\r\n    const [comment, setComment] = useState(initialValue);\r\n    const [comments, setComments] = useState([]);\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            let response=await API.getAllComments(post._id);\r\n            if(response.isSuccess){\r\n                setComments(response.data);\r\n            }\r\n        }\r\n        getData();\r\n    }, [post]);\r\n    const handleChange = (e) => {\r\n        setComment({\r\n            ...comment,\r\n            name: account.username,\r\n            postId: post._id,\r\n            comments: e.target.value\r\n        });\r\n    }\r\n    const addComment = async(e) => {\r\n        let response=await API.newComment(comment);\r\n        if(response.isSuccess){\r\n            setComment(initialValue);\r\n        }\r\n    }\r\n    return (\r\n        <Box>\r\n            <Container>\r\n                <Image src={url} alt=\"DP\"/>\r\n                <StyledTextArea\r\n                    minRows={5}\r\n                    placeholder=\"Share your thoughts...\"\r\n                    value={comment.comments}\r\n                    onChange={(e)=>handleChange(e)}\r\n                />\r\n                <Button \r\n                    variant=\"contained\" \r\n                    size=\"medium\" \r\n                    style={{height:40}}\r\n                    onClick={(e)=>addComment(e)}>Post</Button>\r\n            </Container>\r\n            <Box> \r\n                {\r\n                    \r\n                }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\nexport default Comments; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}