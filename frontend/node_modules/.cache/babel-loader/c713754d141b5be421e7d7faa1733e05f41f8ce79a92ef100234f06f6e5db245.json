{"ast":null,"code":"import axios from 'axios';\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config.js';\nconst API_URL = 'http://localhost:8000';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 30000,\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n});\naxiosInstance.interceptors.request.use(function (config) {\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return processResponse(response);\n}, function (error) {\n  return Promise.reject(processError(error));\n});\nconst processResponse = response => {\n  if ((response === null || response === void 0 ? void 0 : response.status) === 200) {\n    return {\n      isSuccess: true,\n      data: response.data\n    };\n  } else {\n    return {\n      isSuccess: false,\n      status: response === null || response === void 0 ? void 0 : response.status,\n      msg: response === null || response === void 0 ? void 0 : response.msg,\n      code: response === null || response === void 0 ? void 0 : response.code\n    };\n  }\n};\nconst processError = error => {\n  if (error.response) {\n    console.log('ERROR IN RESPONSE:', error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.responseFailure,\n      code: error.response.status\n    };\n  } else if (error.request) {\n    console.log('ERROR IN REQUEST:', error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.requestFailure,\n      code: \"\"\n    };\n  } else {\n    console.log('ERROR IN NETWORK:', error.toJSON());\n    return {\n      isError: true,\n      msg: API_NOTIFICATION_MESSAGES.networkError,\n      code: \"\"\n    };\n  }\n};\nconst API = {};\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\n  API[key] = (body, showUploadProgress, showDownloadProgress) => axiosInstance({\n    method: value.method,\n    url: value.url,\n    data: body,\n    responseType: value.responseType,\n    onUploadProgress: function (progressEvent) {\n      if (showUploadProgress) {\n        let percentageCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showUploadProgress(percentageCompleted);\n      }\n    },\n    onDownloadProgress: function (progressEvent) {\n      if (showDownloadProgress) {\n        let percentageCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        showDownloadProgress(percentageCompleted);\n      }\n    }\n  });\n}\nexport { API };","map":{"version":3,"names":["axios","API_NOTIFICATION_MESSAGES","SERVICE_URLS","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","processResponse","processError","status","isSuccess","data","msg","code","console","log","toJSON","isError","responseFailure","requestFailure","networkError","API","key","value","Object","entries","body","showUploadProgress","showDownloadProgress","method","url","responseType","onUploadProgress","progressEvent","percentageCompleted","Math","round","loaded","total","onDownloadProgress"],"sources":["E:/Final year project/WebP/Blog-Website/client/src/service/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_NOTIFICATION_MESSAGES ,SERVICE_URLS} from '../constants/config.js';\r\nconst API_URL='http://localhost:8000';\r\nconst axiosInstance=axios.create({\r\n    baseURL:API_URL,\r\n    timeout:30000,\r\n    headers:{\r\n        \"content-type\":\"application/json\",\r\n    }\r\n})\r\naxiosInstance.interceptors.request.use(\r\n    function(config){\r\n        return config;\r\n    },\r\n    function (error){\r\n        return Promise.reject(error);\r\n    }\r\n)\r\naxiosInstance.interceptors.response.use(\r\n    function(response){\r\n        return processResponse(response);\r\n    },\r\n    function(error){\r\n        return Promise.reject(processError(error));\r\n    }\r\n)\r\nconst processResponse=(response)=>{\r\n    if(response?.status === 200){\r\n        return { isSuccess: true, data: response.data}\r\n    } \r\n    else\r\n    {   return{\r\n            isSuccess:false,\r\n            status:response?.status,\r\n            msg:response?.msg,\r\n            code:response?.code\r\n        }\r\n    }\r\n}\r\nconst processError=(error)=>{\r\n    if(error.response){\r\n        console.log('ERROR IN RESPONSE:',error.toJSON());\r\n        return {\r\n            isError:true,\r\n            msg:API_NOTIFICATION_MESSAGES.responseFailure,\r\n            code:error.response.status\r\n        }\r\n    }\r\n    else if(error.request){\r\n        console.log('ERROR IN REQUEST:',error.toJSON());\r\n        return {\r\n            isError:true,\r\n            msg:API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code:\"\"\r\n        }\r\n    }\r\n    else{\r\n        \r\n        console.log('ERROR IN NETWORK:',error.toJSON());\r\n        return {\r\n            isError:true,\r\n            msg:API_NOTIFICATION_MESSAGES.networkError,\r\n            code:\"\"\r\n        }\r\n    }\r\n}\r\nconst API={};\r\nfor (const [key,value] of Object.entries(SERVICE_URLS)){\r\n    API[key]=(body,showUploadProgress,showDownloadProgress)=>\r\n        axiosInstance({\r\n            method: value.method,\r\n            url: value.url,\r\n            data: body,\r\n            responseType:value.responseType,\r\n            onUploadProgress: function(progressEvent){\r\n                if(showUploadProgress){\r\n                    let percentageCompleted = Math.round((progressEvent.loaded*100)/progressEvent.total)\r\n                    showUploadProgress(percentageCompleted);\r\n                }\r\n            },\r\n            onDownloadProgress: function(progressEvent){\r\n                if(showDownloadProgress){\r\n                    let percentageCompleted = Math.round((progressEvent.loaded*100)/progressEvent.total)\r\n                    showDownloadProgress(percentageCompleted);\r\n                }\r\n            }\r\n        })\r\n}\r\nexport { API };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,yBAAyB,EAAEC,YAAY,QAAO,wBAAwB;AAC/E,MAAMC,OAAO,GAAC,uBAAuB;AACrC,MAAMC,aAAa,GAACJ,KAAK,CAACK,MAAM,CAAC;EAC7BC,OAAO,EAACH,OAAO;EACfI,OAAO,EAAC,KAAK;EACbC,OAAO,EAAC;IACJ,cAAc,EAAC;EACnB;AACJ,CAAC,CAAC;AACFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAClC,UAASC,MAAM,EAAC;EACZ,OAAOA,MAAM;AACjB,CAAC,EACD,UAAUC,KAAK,EAAC;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AACDT,aAAa,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CACnC,UAASK,QAAQ,EAAC;EACd,OAAOC,eAAe,CAACD,QAAQ,CAAC;AACpC,CAAC,EACD,UAASH,KAAK,EAAC;EACX,OAAOC,OAAO,CAACC,MAAM,CAACG,YAAY,CAACL,KAAK,CAAC,CAAC;AAC9C,CACJ,CAAC;AACD,MAAMI,eAAe,GAAED,QAAQ,IAAG;EAC9B,IAAG,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,MAAM,MAAK,GAAG,EAAC;IACxB,OAAO;MAAEC,SAAS,EAAE,IAAI;MAAEC,IAAI,EAAEL,QAAQ,CAACK;IAAI,CAAC;EAClD,CAAC,MAED;IAAI,OAAM;MACFD,SAAS,EAAC,KAAK;MACfD,MAAM,EAACH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,MAAM;MACvBG,GAAG,EAACN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,GAAG;MACjBC,IAAI,EAACP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO;IACnB,CAAC;EACL;AACJ,CAAC;AACD,MAAML,YAAY,GAAEL,KAAK,IAAG;EACxB,IAAGA,KAAK,CAACG,QAAQ,EAAC;IACdQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACZ,KAAK,CAACa,MAAM,CAAC,CAAC,CAAC;IAChD,OAAO;MACHC,OAAO,EAAC,IAAI;MACZL,GAAG,EAACrB,yBAAyB,CAAC2B,eAAe;MAC7CL,IAAI,EAACV,KAAK,CAACG,QAAQ,CAACG;IACxB,CAAC;EACL,CAAC,MACI,IAAGN,KAAK,CAACH,OAAO,EAAC;IAClBc,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACZ,KAAK,CAACa,MAAM,CAAC,CAAC,CAAC;IAC/C,OAAO;MACHC,OAAO,EAAC,IAAI;MACZL,GAAG,EAACrB,yBAAyB,CAAC4B,cAAc;MAC5CN,IAAI,EAAC;IACT,CAAC;EACL,CAAC,MACG;IAEAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACZ,KAAK,CAACa,MAAM,CAAC,CAAC,CAAC;IAC/C,OAAO;MACHC,OAAO,EAAC,IAAI;MACZL,GAAG,EAACrB,yBAAyB,CAAC6B,YAAY;MAC1CP,IAAI,EAAC;IACT,CAAC;EACL;AACJ,CAAC;AACD,MAAMQ,GAAG,GAAC,CAAC,CAAC;AACZ,KAAK,MAAM,CAACC,GAAG,EAACC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACjC,YAAY,CAAC,EAAC;EACnD6B,GAAG,CAACC,GAAG,CAAC,GAAC,CAACI,IAAI,EAACC,kBAAkB,EAACC,oBAAoB,KAClDlC,aAAa,CAAC;IACVmC,MAAM,EAAEN,KAAK,CAACM,MAAM;IACpBC,GAAG,EAAEP,KAAK,CAACO,GAAG;IACdnB,IAAI,EAAEe,IAAI;IACVK,YAAY,EAACR,KAAK,CAACQ,YAAY;IAC/BC,gBAAgB,EAAE,SAAAA,CAASC,aAAa,EAAC;MACrC,IAAGN,kBAAkB,EAAC;QAClB,IAAIO,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAC,GAAG,GAAEJ,aAAa,CAACK,KAAK,CAAC;QACpFX,kBAAkB,CAACO,mBAAmB,CAAC;MAC3C;IACJ,CAAC;IACDK,kBAAkB,EAAE,SAAAA,CAASN,aAAa,EAAC;MACvC,IAAGL,oBAAoB,EAAC;QACpB,IAAIM,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAC,GAAG,GAAEJ,aAAa,CAACK,KAAK,CAAC;QACpFV,oBAAoB,CAACM,mBAAmB,CAAC;MAC7C;IACJ;EACJ,CAAC,CAAC;AACV;AACA,SAASb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}