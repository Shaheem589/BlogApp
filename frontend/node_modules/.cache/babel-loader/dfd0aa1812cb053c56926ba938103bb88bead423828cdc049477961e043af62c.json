{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year project\\\\WebP\\\\final\\\\client\\\\src\\\\components\\\\Home\\\\post\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Grid, Box } from '@mui/material';\nimport { Link, useSearchParams } from 'react-router-dom';\n\n// import { getAllPosts } from '../../../service/api';\nimport { API } from '../../../service/api';\n\n//components\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, getPosts] = useState([]);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let response = await API.getAllPosts({\n          category: category || ''\n        });\n        if (response.isSuccess) {\n          getPosts(response.data);\n        } else {\n          // Handle the case where the API call is successful, but the response indicates an error\n          console.error('API call was successful, but response indicates an error:', response);\n        }\n      } catch (error) {\n        // Handle the case where an error occurs during the API call\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts !== null && posts !== void 0 && posts.length ? posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 3,\n      sm: 4,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        to: `details/${post._id}`,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        color: '878787',\n        margin: '30px 80px',\n        fontSize: 18\n      },\n      children: \"No data is available for selected category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n};\n_s(Posts, \"pts1W2ILwi0At/DNGtEb2nIPAj0=\", false, function () {\n  return [useSearchParams];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Grid","Box","Link","useSearchParams","API","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","_s","posts","getPosts","searchParams","category","get","fetchData","response","getAllPosts","isSuccess","data","console","error","children","length","map","post","item","lg","sm","xs","style","textDecoration","color","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","_c","$RefreshReg$"],"sources":["E:/Final year project/WebP/final/client/src/components/Home/post/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport { Grid, Box } from '@mui/material';\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\n// import { getAllPosts } from '../../../service/api';\r\nimport { API } from '../../../service/api';\r\n\r\n//components\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [posts, getPosts] = useState([]);\r\n    \r\n    const [searchParams] = useSearchParams();\r\n    const category = searchParams.get('category');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                let response = await API.getAllPosts({ category: category || '' });\r\n                if (response.isSuccess) {\r\n                    getPosts(response.data);\r\n                } else {\r\n                    // Handle the case where the API call is successful, but the response indicates an error\r\n                    console.error('API call was successful, but response indicates an error:', response);\r\n                }\r\n            } catch (error) {\r\n                // Handle the case where an error occurs during the API call\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, [category]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                posts?.length ? posts.map(post => (\r\n                    <Grid item lg={3} sm={4} xs={12}>\r\n                        <Link style={{textDecoration: 'none', color: 'inherit'}} to={`details/${post._id}`}>\r\n                            <Post post={ post } />\r\n                        </Link>\r\n                    </Grid>\r\n                )) : <Box style={{color: '878787', margin: '30px 80px', fontSize: 18}}>\r\n                        No data is available for selected category\r\n                    </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AACzC,SAASC,IAAI,EAAEC,eAAe,QAAQ,kBAAkB;;AAExD;AACA,SAASC,GAAG,QAAQ,sBAAsB;;AAE1C;AACA,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACe,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EACxC,MAAMY,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAE7ClB,SAAS,CAAC,MAAM;IACZ,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,IAAIC,QAAQ,GAAG,MAAMd,GAAG,CAACe,WAAW,CAAC;UAAEJ,QAAQ,EAAEA,QAAQ,IAAI;QAAG,CAAC,CAAC;QAClE,IAAIG,QAAQ,CAACE,SAAS,EAAE;UACpBP,QAAQ,CAACK,QAAQ,CAACG,IAAI,CAAC;QAC3B,CAAC,MAAM;UACH;UACAC,OAAO,CAACC,KAAK,CAAC,2DAA2D,EAAEL,QAAQ,CAAC;QACxF;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZ;QACAD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACIR,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAEQZ,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEa,MAAM,GAAGb,KAAK,CAACc,GAAG,CAACC,IAAI,iBAC1BpB,OAAA,CAACP,IAAI;MAAC4B,IAAI;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,EAAG;MAAAP,QAAA,eAC5BjB,OAAA,CAACL,IAAI;QAAC8B,KAAK,EAAE;UAACC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAS,CAAE;QAACC,EAAE,EAAG,WAAUR,IAAI,CAACS,GAAI,EAAE;QAAAZ,QAAA,eAC/EjB,OAAA,CAACF,IAAI;UAACsB,IAAI,EAAGA;QAAM;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACT,CAAC,gBAAGjC,OAAA,CAACN,GAAG;MAAC+B,KAAK,EAAE;QAACE,KAAK,EAAE,QAAQ;QAAEO,MAAM,EAAE,WAAW;QAAEC,QAAQ,EAAE;MAAE,CAAE;MAAAlB,QAAA,EAAC;IAEnE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAEhB,CAAC;AAEX,CAAC;AAAA7B,EAAA,CAxCKD,KAAK;EAAA,QAGgBP,eAAe;AAAA;AAAAwC,EAAA,GAHpCjC,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}