{"ast":null,"code":"import axios from'axios';import{API_NOTIFICATION_MESSAGES,SERVICE_URLS}from'../constants/config.js';import{getAccessToken,getType}from'../utils/common-utils.js';// ... (existing imports)\nconst API_URL='';const axiosInstance=axios.create({baseURL:API_URL,timeout:30000,headers:{'Accept':'application/json','Content-Type':'application/json'}});axiosInstance.interceptors.request.use(function(config){// Ensure that TYPE is set appropriately in your requests\nif(config.TYPE.params){config.params=config.TYPE.params;}else if(config.TYPE.query){config.url=config.url+'/'+config.TYPE.query;}return config;},function(error){return Promise.reject(error);});axiosInstance.interceptors.response.use(function(response){return processResponse(response);},function(error){return Promise.reject(processError(error));});const processResponse=response=>{if((response===null||response===void 0?void 0:response.status)===200){return{isSuccess:true,data:response.data};}else{var _response$data,_response$data2;return{isFailure:true,status:response===null||response===void 0?void 0:response.status,// Adjust this part based on your API's error response structure\nmsg:(response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.msg)||'Unknown error',code:(response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.code)||''};}};const processError=error=>{if(error.response){console.log('ERROR IN RESPONSE:',error.toJSON());return{isError:true,msg:API_NOTIFICATION_MESSAGES.responseFailure,code:error.response.status};}else if(error.request){console.log('ERROR IN REQUEST:',error.toJSON());return{isError:true,msg:API_NOTIFICATION_MESSAGES.requestFailure,code:''};}else{console.log('ERROR IN NETWORK:',error.toJSON());return{isError:true,msg:API_NOTIFICATION_MESSAGES.networkError,code:''};}};const API={};for(const[key,value]of Object.entries(SERVICE_URLS)){API[key]=(body,showUploadProgress,showDownloadProgress)=>axiosInstance({method:value.method,url:value.url,data:value.method==='DELETE'?{}:body,responseType:value.responseType,headers:{authorization:getAccessToken()},// Ensure that TYPE is set appropriately in your requests\nTYPE:getType(value,body),onUploadProgress:function(progressEvent){if(showUploadProgress){let percentageCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);showUploadProgress(percentageCompleted);}},onDownloadProgress:function(progressEvent){if(showDownloadProgress){let percentageCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);showDownloadProgress(percentageCompleted);}}});}export{API};","map":{"version":3,"names":["axios","API_NOTIFICATION_MESSAGES","SERVICE_URLS","getAccessToken","getType","API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","TYPE","params","query","url","error","Promise","reject","response","processResponse","processError","status","isSuccess","data","_response$data","_response$data2","isFailure","msg","code","console","log","toJSON","isError","responseFailure","requestFailure","networkError","API","key","value","Object","entries","body","showUploadProgress","showDownloadProgress","method","responseType","authorization","onUploadProgress","progressEvent","percentageCompleted","Math","round","loaded","total","onDownloadProgress"],"sources":["C:/Users/shahe/OneDrive/Documents/GitHub/BlogApp/frontend/src/service/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_NOTIFICATION_MESSAGES ,SERVICE_URLS} from '../constants/config.js';\r\nimport { getAccessToken,getType } from '../utils/common-utils.js';\r\n// ... (existing imports)\r\n\r\nconst API_URL = '';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 30000,\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function (config) {\r\n        // Ensure that TYPE is set appropriately in your requests\r\n        if (config.TYPE.params) {\r\n            config.params = config.TYPE.params;\r\n        } else if (config.TYPE.query) {\r\n            config.url = config.url + '/' + config.TYPE.query;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n    function (response) {\r\n        return processResponse(response);\r\n    },\r\n    function (error) {\r\n        return Promise.reject(processError(error));\r\n    }\r\n);\r\n\r\nconst processResponse = (response) => {\r\n    if (response?.status === 200) {\r\n        return { isSuccess: true, data: response.data };\r\n    } else {\r\n        return {\r\n            isFailure: true,\r\n            status: response?.status,\r\n            // Adjust this part based on your API's error response structure\r\n            msg: response?.data?.msg || 'Unknown error',\r\n            code: response?.data?.code || '',\r\n        };\r\n    }\r\n};\r\n\r\nconst processError = (error) => {\r\n    if (error.response) {\r\n        console.log('ERROR IN RESPONSE:', error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n            code: error.response.status,\r\n        };\r\n    } else if (error.request) {\r\n        console.log('ERROR IN REQUEST:', error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code: '',\r\n        };\r\n    } else {\r\n        console.log('ERROR IN NETWORK:', error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.networkError,\r\n            code: '',\r\n        };\r\n    }\r\n};\r\n\r\nconst API = {};\r\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\r\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\r\n        axiosInstance({\r\n            method: value.method,\r\n            url: value.url,\r\n            data: value.method === 'DELETE' ? {} : body,\r\n            responseType: value.responseType,\r\n            headers: {\r\n                authorization: getAccessToken(),\r\n            },\r\n            // Ensure that TYPE is set appropriately in your requests\r\n            TYPE: getType(value, body),\r\n            onUploadProgress: function (progressEvent) {\r\n                if (showUploadProgress) {\r\n                    let percentageCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showUploadProgress(percentageCompleted);\r\n                }\r\n            },\r\n            onDownloadProgress: function (progressEvent) {\r\n                if (showDownloadProgress) {\r\n                    let percentageCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showDownloadProgress(percentageCompleted);\r\n                }\r\n            },\r\n        });\r\n}\r\n\r\nexport { API };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}